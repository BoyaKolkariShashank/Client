[{"C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\index.js":"1","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\App.js":"2","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\reducer\\UseReducer.js":"3","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Grievance.jsx":"4","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\GrievanceStatus.jsx":"5","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Health.jsx":"6","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Login.jsx":"7","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Home.jsx":"8","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Navbar.jsx":"9","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\About.jsx":"10","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Signup.jsx":"11","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\UpdateDocs.jsx":"12","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\AdminLogin.jsx":"13","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Logout.jsx":"14","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Education.jsx":"15","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Error.jsx":"16","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Service.jsx":"17","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\config.js":"18"},{"size":488,"mtime":1709912424325,"results":"19","hashOfConfig":"20"},{"size":1962,"mtime":1709912424233,"results":"21","hashOfConfig":"20"},{"size":168,"mtime":1709912424956,"results":"22","hashOfConfig":"20"},{"size":6489,"mtime":1714155702555,"results":"23","hashOfConfig":"20"},{"size":3218,"mtime":1714171097255,"results":"24","hashOfConfig":"20"},{"size":3173,"mtime":1709912424562,"results":"25","hashOfConfig":"20"},{"size":4448,"mtime":1714172402939,"results":"26","hashOfConfig":"20"},{"size":2471,"mtime":1714482793107,"results":"27","hashOfConfig":"20"},{"size":1929,"mtime":1714171624367,"results":"28","hashOfConfig":"20"},{"size":1022,"mtime":1714485208098,"results":"29","hashOfConfig":"20"},{"size":6694,"mtime":1714173605116,"results":"30","hashOfConfig":"20"},{"size":5354,"mtime":1714133914621,"results":"31","hashOfConfig":"20"},{"size":2461,"mtime":1714161150366,"results":"32","hashOfConfig":"20"},{"size":939,"mtime":1709912424641,"results":"33","hashOfConfig":"20"},{"size":3167,"mtime":1709912424452,"results":"34","hashOfConfig":"20"},{"size":256,"mtime":1709912424495,"results":"35","hashOfConfig":"20"},{"size":3174,"mtime":1709912424673,"results":"36","hashOfConfig":"20"},{"size":81,"mtime":1714485096085,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"pbpdj",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\index.js",[],["83","84"],"C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\App.js",[],"C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\reducer\\UseReducer.js",[],"C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Grievance.jsx",["85"],"import React from 'react';\r\nimport phone from '../images/telephone.png';\r\nimport email from '../images/email.png';\r\nimport address from '../images/address.png';\r\nimport { useEffect, useState } from 'react';\r\nimport './Grievance.css';\r\n\r\n\r\nconst Grievance=()=>{\r\n    const [userData,setUserData] =useState({\r\n      name:\"\",email:\"\",phone:\"\",dept:\"\",grievance:\"\"});\r\n\r\n    const userContact=async()=>{\r\n       try{\r\n         const res = await fetch(\"/getdata\",{\r\n            method: \"GET\",\r\n            headers:{\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n         });\r\n         const data=await res.json();\r\n         setUserData({ ...userData,name:data.name,email:data.email,\r\n          phone:data.phone});\r\n         //console.log(`this is useState daa: ${userData.name}`);\r\n         if(!res.status===200){\r\n             const error=new Error(res.err);\r\n             throw error;\r\n         }\r\n       }catch(err){\r\n           console.log(err);\r\n           //history.push(\"/login\");\r\n       }\r\n    }\r\n    useEffect(()=>{\r\n       userContact();\r\n    },[])\r\n\r\n    //storing data of grievance array\r\n    const handleInputs=(event)=>{\r\n      const name=event.target.name;\r\n      const value=event.target.value;\r\n\r\n      setUserData({ ...userData,[name]:value});\r\n    }\r\n\r\n    //send data to backend\r\n    const fileGrievance=async(event)=>{\r\n       event.preventDefault();\r\n\r\n       const {name,email,phone,dept,grievance}=userData;\r\n       const res=await fetch(\"/grievance\",{\r\n          method:\"POST\",\r\n          headers:{\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            name,email,phone,dept,grievance\r\n          })\r\n       });\r\n\r\n       const data= await res.json();\r\n       if(!data){\r\n         console.log(\"Grievance Not Filed\");\r\n         window.alert(\"Try to relogin. Your grievance was not filed!\")\r\n       }else{\r\n         alert(\"Grievance Filed Successfully!! We'll inform you when there will be a response\");\r\n          setUserData({...userData,grievance:\"\"});\r\n       }\r\n    }\r\n  return(\r\n    <>\r\n      {/* Contact Us Form */}\r\n      <div className=\"contact_form mx-5\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-10 offset-lg-1\">\r\n              <div className=\"contact_form_container py-5\">\r\n                <div className=\"contact_form_title\">\r\n                  <h2 className='text-center'>File a Grievance</h2>\r\n                </div>\r\n\r\n                <form method=\"POST\" className='jumbotron'>\r\n                  <div className=\"contact_form_name d-flex row\">\r\n                    <input type=\"text\" id=\"contact_form_name\" \r\n                    className=\"contact_form_name input_field col-2\"\r\n                    name=\"name\"\r\n                    value={userData? userData.name : \"\"}\r\n                    onChange={handleInputs}\r\n                    placeholder=\"Your Name\" required=\"true\"/>\r\n<div className=\"col-1\"></div>\r\n\r\n                    <input type=\"email\" id=\"contact_form_email\" \r\n                    className=\"contact_form_email input_field col-4\"\r\n                    name=\"email\"\r\n                    value={userData? userData.email : \"\"}\r\n                    onChange={handleInputs}\r\n                    placeholder=\"Your Email\" required=\"true\"/>\r\n<div className=\"col-1\"></div>\r\n\r\n                    <input type=\"text\" id=\"contact_form_contact\" \r\n                    className=\"contact_form_contact input_field col-3\"\r\n                    name=\"phone\"\r\n                    value={userData? userData.phone : \"\"}\r\n                    onChange={handleInputs}\r\n                    placeholder=\"Your Phone Number\" required=\"true\"/>\r\n                  </div>\r\n<br />\r\n                  <label for=\"complaint\">Choose a department:</label>\r\n                    <select name=\"dept\" id=\"complaint\" onChange={handleInputs}>\r\n                    <option value=\"\">--Select department--</option>\r\n                     <option value=\"Education\">CSE</option>\r\n                     <option value=\"Health Ministry\">AIDS</option>\r\n                     <option value=\"Service Provider\">CS&IT</option>\r\n                     <option value=\"Others\">Others</option>\r\n                    </select>\r\n<br />\r\n                  <div className=\"contact_form_text\">\r\n                     <textarea className=\"text_field contact_form_message\" id=\"msg\" \r\n                     cols=\"82\" rows=\"5\" placeholder=\"Your Message Here\" name=\"grievance\"\r\n                     onChange={handleInputs} value={userData.grievance}></textarea>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <p>Upload Supporting Document Here:</p>\r\n                    <input type=\"file\" id=\"myFile\" name=\"filename\" />\r\n                  </div>\r\n<br />\r\n                  <div className=\"contact_form_button\">\r\n                    <button type=\"submit\" className=\"btn btn-outline-primary\"\r\n                    onClick={fileGrievance}>Submit Grievance</button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"contact_info bg-dark text-white\">\r\n        <div className=\"container-fluid\">\r\n        <br />\r\n         <div className=\"row\">\r\n           <div className=\"col-lg-12 row\">   \r\n             <div className=\"contact_info_item col-1 abc\">\r\n               <img src={phone} alt=\"not found\" height=\"50\" width=\"50\"/>\r\n             </div>\r\n             <div className=\"contact_info_item col-2 abc\">\r\n               <h6>Phone</h6>\r\n               <p>+1800 266 1236</p>\r\n             </div>\r\n\r\n<div className=\"col-1\"></div>\r\n             \r\n             <div className=\"contact_info_item col-1 abc\">\r\n               <img src={email} alt=\"not found\" height=\"50\" width=\"50\"/>\r\n             </div>\r\n             <div className=\"contact_info_item col-3 abc\">\r\n               <h6>Email</h6>\r\n               <p>filemygrievance@gmail.com</p>\r\n             </div>\r\n             \r\n\r\n<div className=\"col-1\"></div>\r\n             <div className=\"contact_info_item col-1 abc\">\r\n               <img src={address} alt=\"not found\" height=\"50\" width=\"50\"/>\r\n             </div>\r\n             <div className=\"contact_info_item col-2 abc\">\r\n               <h6>Address</h6>\r\n               <p>New Delhi</p>\r\n             </div>\r\n\r\n           </div>\r\n         </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Grievance;","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\GrievanceStatus.jsx",["86","87"],"import React,{useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './GrievanceStatus.css';\r\n\r\nconst GrievanceStatus=()=>{\r\n   // const [Cat,setCat]=useState(\"Education\");\r\n    var arr=[{date:\"\",dept:\"\",email:\"\",feedback:\"\",grievance:\"\",name:\"\",phone:\"\",status:\"\",_id:\"\"}];\r\n    const [Array,setArray] =useState([{date:\"\",dept:\"\",email:\"\",feedback:\"\",grievance:\"\",name:\"\",phone:\"\",status:\"\",_id:\"\"}]);\r\n\r\n    let Cat=\"Education\";\r\n    /*const handleInputs=(event)=>{\r\n      setCat(event.target.value);\r\n    }*/\r\n\r\n    const getData=async()=>{\r\n        try{\r\n         const res=await fetch(\"/grievancelist\",{\r\n            method: \"GET\",\r\n            headers:{\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials:\"include\"\r\n         });\r\n         const data=await res.json();\r\n         console.log(data);\r\n         arr=getlist(data);\r\n        \r\n         setArray(arr);\r\n         \r\n         if(!res.status===200){\r\n            const error=new Error(res.err);\r\n            throw error;\r\n        }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getData();\r\n     },[])\r\n\r\n     const getlist=(d)=>{\r\n         let a=0;\r\n         //console.log(d);\r\n         let Gdata=[{date:\"\",dept:\"\",email:\"\",feedback:\"\",grievance:\"\",name:\"\",phone:\"\",status:\"\",_id:\"\"}];\r\n       for(let i=0;i<d.length;i++){\r\n           for(let j=0;j<d[i].grievances.length;j++){\r\n               //console.log(\"Inside Loop: \"+d[i].grievances[j].name + \" \"+ d[i].grievances[j].dept\r\n               //+ \" \" + d[i].grievances[j].grievance);\r\n               \r\n               Gdata[a]=d[i].grievances[j];\r\n               a++;\r\n           } \r\n       }\r\n       return Gdata;\r\n    }\r\n    \r\n        return(\r\n            <>\r\n            <table className=\"Gtable table-light\" >\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>Names</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Department</th>\r\n                <th>Grievance</th>\r\n                <th>Status</th>\r\n                <th>Feedback</th>\r\n                <th>Date</th>\r\n            </tr>\r\n            {\r\n              Array.map((cval)=>{\r\n                  return <tr>\r\n                  <td>{cval._id}</td>\r\n                  <td>{cval.name}</td>\r\n                  <td>{cval.email}</td>\r\n                  <td>{cval.phone}</td>\r\n                  <td>{cval.dept}</td>\r\n                  <td>{cval.grievance}</td>\r\n                  <td>{cval.status}</td>\r\n                  <td>{cval.feedback}</td>\r\n                  <td>{cval.date}</td>\r\n                  </tr>\r\n              })\r\n            } \r\n            </table>\r\n            <Link to=\"/aAbBcC/updatedocs\" className=\"btn btn-outline-primary mx-4 mb-1 update\">Update Documents</Link>\r\n            <Link to=\"/login\" className=\"btn btn-outline-warning mx-4 mb-1 update\">Logout as Admin</Link>\r\n            <br />\r\n            <br />\r\n            <p className='small mx-4' style={{\"font-style\":\"italic\"}}>Note: Copy the grievance ID to update.</p>\r\n            </>\r\n        );\r\n    }\r\n\r\nexport default GrievanceStatus;","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Health.jsx",["88","89"],"import React,{useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst GrievanceStatus=()=>{\r\n    var arr=[{date:\"\",dept:\"\",email:\"\",feedback:\"\",grievance:\"\",name:\"\",phone:\"\",status:\"\",_id:\"\"}];\r\n    const [Array,setArray] =useState([{date:\"\",dept:\"\",email:\"\",feedback:\"\",grievance:\"\",name:\"\",phone:\"\",status:\"\",_id:\"\"}]);\r\n\r\n    /*const handleInputs=(event)=>{\r\n      setCat(event.target.value);\r\n    }*/\r\n\r\n    const getData=async()=>{\r\n        try{\r\n         const res=await fetch(\"/grievancelist\",{\r\n            method: \"GET\",\r\n            headers:{\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials:\"include\"\r\n         });\r\n         const data=await res.json();\r\n         console.log(data);\r\n         arr=getlist(data);\r\n        \r\n         setArray(arr);\r\n         \r\n         if(!res.status===200){\r\n            const error=new Error(res.err);\r\n            throw error;\r\n        }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getData();\r\n     },[])\r\n\r\n     const getlist=(d)=>{\r\n         let a=0;\r\n         //console.log(d);\r\n         let Gdata=[{date:\"\",dept:\"\",email:\"\",feedback:\"\",grievance:\"\",name:\"\",phone:\"\",status:\"\",_id:\"\"}];\r\n       for(let i=0;i<d.length;i++){\r\n           for(let j=0;j<d[i].grievances.length;j++){\r\n               //console.log(\"Inside Loop: \"+d[i].grievances[j].name + \" \"+ d[i].grievances[j].dept\r\n               //+ \" \" + d[i].grievances[j].grievance);\r\n               if(d[i].grievances[j].dept==\"Health Ministry\"){\r\n               Gdata[a]=d[i].grievances[j];\r\n               a++;\r\n               }\r\n           } \r\n       }\r\n       return Gdata;\r\n    }\r\n    \r\n        return(\r\n            <>\r\n            <table className=\"Gtable table-dark\">\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>Names</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Department</th>\r\n                <th>Grievance</th>\r\n                <th>Status</th>\r\n                <th>Feedback</th>\r\n                <th>Date</th>\r\n            </tr>\r\n            {\r\n              Array.map((cval)=>{\r\n                  return <tr>\r\n                  <td>{cval._id}</td>\r\n                  <td>{cval.name}</td>\r\n                  <td>{cval.email}</td>\r\n                  <td>{cval.phone}</td>\r\n                  <td>{cval.dept}</td>\r\n                  <td>{cval.grievance}</td>\r\n                  <td>{cval.status}</td>\r\n                  <td>{cval.feedback}</td>\r\n                  <td>{cval.date}</td>\r\n                  </tr>\r\n              })\r\n            } \r\n            </table>\r\n            <Link to=\"/aAbBcC/updatedocs\" className=\"btn btn-outline-primary mx-4 mb-1 update\">Update Documents</Link>\r\n            <Link to=\"/login\" className=\"btn btn-outline-warning mx-4 mb-1 update\">Logout as Admin</Link>\r\n            <br />\r\n            <br />\r\n            <p className='small mx-4' style={{\"font-style\":\"italic\"}}>Note: Copy the grievance ID to update.</p>\r\n            </>\r\n        );\r\n    }\r\n\r\nexport default GrievanceStatus;","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Login.jsx",["90"],"import React, {useContext, useState} from 'react';\r\nimport login from '../images/login.gif';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../App';\r\nimport phone from '../images/telephone.png';\r\nimport mail from '../images/email.png';\r\nimport address from '../images/address.png';\r\nimport './Login.css';\r\n\r\nconst Login=()=>{\r\n  const {state,dispatch} = useContext(UserContext);\r\n\r\n  const history=useHistory();\r\n\r\n  const [email,setEmail]=useState('');\r\n  const [password,setPassword]=useState('');\r\n\r\n  const loginUser=async(e)=>{\r\n     e.preventDefault();\r\n\r\n     const res= await fetch('/signin',{\r\n        method:\"POST\",\r\n        headers:{\r\n          \"Content-Type\":\"application/json\",\r\n          'Accept': 'application/json'\r\n        },\r\n        \r\n        body:JSON.stringify({\r\n            email,password\r\n        })\r\n     });\r\n     const data=await res.json();\r\n     \r\n     if(res.status===400 || !data){\r\n       window.alert(\"Invalid Credentials\");\r\n     }else{\r\n      dispatch({type:\"USER\",payload:true})\r\n      window.alert(\"Login Successful\");\r\n      history.push(\"/\");\r\n     }\r\n  }\r\n  return(\r\n    <>\r\n      <section className=\"signup\">\r\n       <div className=\"container mt-5\">\r\n         <div className=\"signup-content\">\r\n           <div className=\"signup-form row\">\r\n             <div className=\"signup-image col-md-6\">\r\n              <figure>\r\n              <img src={login} alt=\"not found\"/>\r\n              </figure>\r\n              <NavLink to=\"/signup\" className=\"login-image-link\">CREATE AN ACCOUNT  | </NavLink>\r\n              <NavLink to=\"/AdminLogin\" className=\"login-image-link\"> &nbsp;LOGIN AS ADMIN</NavLink>\r\n             </div>\r\n             <div className=\"col-md-6\">\r\n             <h2>Log In</h2>\r\n             <hr/>\r\n             <form method=\"POST\" className=\"register-form\" id=\"register-form\">\r\n            \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">\r\n                Email ID:\r\n                </label>\r\n                <input type=\"email\" name=\"email\" id=\"email\" autoComplete=\"off\" \r\n                value={email}\r\n                onChange={(e)=> setEmail(e.target.value)}\r\n                placeholder=\"Your email ID here\" className='mx-2'></input>\r\n              </div>\r\n              \r\n              <br />\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">\r\n                Password:\r\n                </label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" autoComplete=\"off\" \r\n                value={password}\r\n                onChange={(e)=>setPassword(e.target.value)}\r\n                placeholder=\"Enter your password\" className='mx-2'></input>\r\n              </div>\r\n<br />\r\n              <div className=\"form-group form-button\">\r\n                <input type=\"submit\" name=\"signin\" id=\"signin\" className=\"form-submit login btn btn-outline-primary\"\r\n                onClick={loginUser} value=\"Log In\"/>\r\n              </div>\r\n             </form>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n      </section>\r\n      <div className=\"contact_info bg-dark text-white mt-4\">\r\n        <div className=\"container-fluid\">\r\n        <br />\r\n         <div className=\"row\">\r\n           <div className=\"col-lg-12 row\">   \r\n             <div className=\"contact_info_item col-1 abc\">\r\n               <img src={phone} alt=\"not found\" height=\"50\" width=\"50\"/>\r\n             </div>\r\n             <div className=\"contact_info_item col-2 abc\">\r\n               <h6>Phone</h6>\r\n               <p>+1800 266 1236</p>\r\n             </div>\r\n\r\n<div className=\"col-1\"></div>\r\n             \r\n             <div className=\"contact_info_item col-1 abc\">\r\n               <img src={mail} alt=\"not found\" height=\"50\" width=\"50\"/>\r\n             </div>\r\n             <div className=\"contact_info_item col-3 abc\">\r\n               <h6>Email</h6>\r\n               <p>shashank010.com@gmail.com</p>\r\n             </div>\r\n             \r\n\r\n<div className=\"col-1\"></div>\r\n             <div className=\"contact_info_item col-1 abc\">\r\n               <img src={address} alt=\"not found\" height=\"50\" width=\"50\"/>\r\n             </div>\r\n             <div className=\"contact_info_item col-2 abc\">\r\n               <h6>Address</h6>\r\n               <p>Vijaywada</p>\r\n             </div>\r\n\r\n           </div>\r\n         </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login;","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Home.jsx",["91"],"C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Navbar.jsx",[],"C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\About.jsx",["92"],"C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Signup.jsx",[],"C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\UpdateDocs.jsx",["93","94"],"import React, { useState } from 'react';\r\n\r\nconst UpdateDocs=()=>{\r\n    const [gId,setGId]=useState('');\r\n    const [_id,setMId]=useState('');\r\n    const[email,setEmail]=useState('');\r\n    const[dept,setDept]=useState('');\r\n    const[status,setStatus]=useState('');\r\n    const [feedback,setFeedback]=useState('');\r\n    const [Data,setData] =useState([{date:\"\",dept:\"\",email:\"\",feedback:\"\",grievance:\"\",name:\"\",phone:\"\",status:\"\",_id:\"\"}]);\r\n    \r\n    const getGrievance=async(e)=>{\r\n      e.preventDefault();\r\n      try{\r\n       const res=await fetch('/grievancelist',{\r\n        method: \"GET\",\r\n        headers:{\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials:\"include\"\r\n       });\r\n       const data=await res.json();\r\n       console.log(data);\r\n\r\n       const obj=thisGrievance(data);\r\n       setData(obj);\r\n       setEmail(obj.email);\r\n       setDept(obj.dept);\r\n\r\n       if(!res.status===200){\r\n        const error=new Error(res.err);\r\n        throw error;\r\n        }\r\n      }catch(err){\r\n          console.log(err);\r\n      }      \r\n    }\r\n\r\n    const updateData=async(e)=>{\r\n        e.preventDefault();\r\n        try{\r\n            //?_id=${_id}gId=${gId}&status=${status}&feedback=${feedback}\r\n         const res=await fetch(`/aAbBcC/updatedocs`,{\r\n            method: \"POST\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                'Accept': 'application/json'\r\n            },\r\n           \r\n            body:JSON.stringify({\r\n                email, dept, _id, gId, status,feedback\r\n           })    \r\n         })\r\n         //console.log(\"patch\");\r\n         const data=await res.json();\r\n         \r\n         if(res.status===400 || !data){\r\n             window.alert(\"Could not connect to backend\");\r\n         }\r\n         else{\r\n             window.alert(\"Grievance Updated Successfully\")\r\n         }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const thisGrievance=(d)=>{\r\n        let a=0;\r\n        //let d=doc[0];\r\n        //let d=t.grievances;\r\n      for(let i=0;i<d.length;i++){\r\n          for(let j=0;j<d[i].grievances.length;j++){\r\n              if(d[i].grievances[j]._id==gId){\r\n                setMId(d[i]._id);\r\n               // setEmail(d[i].email);\r\n                return d[i].grievances[j];\r\n              }\r\n          }\r\n      }\r\n      return;\r\n   }\r\n    return(\r\n        <div className='mx-3'>\r\n        <br />\r\n        <h1 className=\"text-center mt-1\">Update Grievances</h1>\r\n        <hr />\r\n        <div className='jumbotron'>\r\n        <form method=\"GET\">\r\n        <label for=\"GId\">Enter the Grievance Id:</label>\r\n        <input type=\"text\" id=\"GId\" name=\"GId\" value={gId} onChange={(e)=>setGId(e.target.value)} className='mx-2 col-3'/>\r\n        <br />\r\n        <input type=\"submit\" value=\"Get Data\" name=\"submitgid\" id=\"submitgid\" className='btn btn-outline-primary'\r\n            onClick={getGrievance}\r\n        />\r\n        <br />\r\n        </form>\r\n        <div className=\"formdata\">\r\n        <br />\r\n        <div className='row'>\r\n        <h4 className='text-uppercase' style={{\"textDecoration\":\"underline\"}}>Grievance Information</h4></div>\r\n        <div className='row'>\r\n        <h6 className=''>Name:</h6><p className='mx-2'> &nbsp;{Data.name}</p></div>\r\n        <div className='row'>\r\n        <h6 >Phone:</h6><p className='mx-2'>{Data.phone}</p></div>\r\n        <div className='row'>\r\n        <h6 >Grievance:</h6><p className='mx-2'>{Data.grievance}</p>\r\n        </div>\r\n        \r\n        <form method=\"POST\">\r\n        <div className='row'>\r\n        <h6 >Email:</h6><p name=\"email\" type=\"text\" className='mx-2' value={email}>{email}</p></div>\r\n        <div className='row'>\r\n        <h6>Department:</h6><p name=\"dept\" type=\"text\" className='mx-2' value={dept}>{dept}</p></div>\r\n        <div className='row'>\r\n        <h6 >Main ID: </h6><input className='mx-2 col-3' type=\"text\" value={_id} name=\"_id\" /></div>\r\n        <br />\r\n        <div className='row'>\r\n        <h6 >This ID: </h6><input type=\"text\" className='mx-2 col-3' value={gId} name=\"gId\" /></div>\r\n        \r\n        <br />\r\n        <div className='row'>\r\n        <h6>Status:</h6>\r\n        <select name=\"status\" id=\"status\" onChange={(e)=>setStatus(e.target.value)} className='mx-2 col-3'>\r\n        <option value=\"Not Seen\">Not Seen</option>\r\n        <option value=\"In Process\">In Process</option>\r\n        <option value=\"Referred to concerned Authority\">Referred to concerned Authority</option>\r\n        <option value=\"Closed\">Closed</option>\r\n        </select>\r\n        </div>\r\n        \r\n        <br />\r\n        <div className='row'>\r\n        <h6>Feedback:</h6>\r\n        <input type=\"text\" name=\"feedback\" className='mx-2 col-4' value={feedback} onChange={(e)=>setFeedback(e.target.value)}/>\r\n        </div>\r\n        <br></br>\r\n        <div className='row'>\r\n        <h6>Date of Filing:</h6><p>{Data.date}</p></div>\r\n        {/* <h6>Feedback Document:\r\n        <input type=\"file\" id=\"myFile\" name=\"filename\"></input>\r\n        </h6>*/}\r\n        <br></br>\r\n        <div className='row'>\r\n        <input type=\"submit\" value=\"Update Status\" className='btn btn-outline-primary' onClick={updateData}/> \r\n        </div>\r\n        </form>\r\n\r\n        </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateDocs;","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\AdminLogin.jsx",[],"C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Logout.jsx",["95"],"import React, { useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { UserContext } from '../App';\r\n\r\nconst Logout=()=>{\r\n    const {state,dispatch} = useContext(UserContext);\r\n    const history=useHistory();\r\n    useEffect(()=>{\r\n        fetch(\"/logout\",{\r\n            method:\"GET\",\r\n            headers:{\r\n                Accept:\"application/json\",\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            credentials:\"include\"\r\n        }).then((res)=>{\r\n            dispatch({type:\"USER\",payload:false})\r\n            history.push(\"/login\", {replace: true});\r\n            if(!res.status===200){\r\n                const error=new Error(res.err);\r\n                throw error;\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err);\r\n        });\r\n    });\r\n    return(\r\n       <>\r\n        <h1>Logged out!!</h1>\r\n       </>\r\n    );\r\n}\r\n\r\nexport default Logout;","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Education.jsx",["96","97"],"import React,{useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst GrievanceStatus=()=>{\r\n    var arr=[{date:\"\",dept:\"\",email:\"\",feedback:\"\",grievance:\"\",name:\"\",phone:\"\",status:\"\",_id:\"\"}];\r\n    const [Array,setArray] =useState([{date:\"\",dept:\"\",email:\"\",feedback:\"\",grievance:\"\",name:\"\",phone:\"\",status:\"\",_id:\"\"}]);\r\n\r\n    /*const handleInputs=(event)=>{\r\n      setCat(event.target.value);\r\n    }*/\r\n\r\n    const getData=async()=>{\r\n        try{\r\n         const res=await fetch(\"/grievancelist\",{\r\n            method: \"GET\",\r\n            headers:{\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials:\"include\"\r\n         });\r\n         const data=await res.json();\r\n         console.log(data);\r\n         arr=getlist(data);\r\n        \r\n         setArray(arr);\r\n         \r\n         if(!res.status===200){\r\n            const error=new Error(res.err);\r\n            throw error;\r\n        }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getData();\r\n     },[])\r\n\r\n     const getlist=(d)=>{\r\n         let a=0;\r\n         //console.log(d);\r\n         let Gdata=[{date:\"\",dept:\"\",email:\"\",feedback:\"\",grievance:\"\",name:\"\",phone:\"\",status:\"\",_id:\"\"}];\r\n       for(let i=0;i<d.length;i++){\r\n           for(let j=0;j<d[i].grievances.length;j++){\r\n               //console.log(\"Inside Loop: \"+d[i].grievances[j].name + \" \"+ d[i].grievances[j].dept\r\n               //+ \" \" + d[i].grievances[j].grievance);\r\n               if(d[i].grievances[j].dept==\"Education\"){\r\n               Gdata[a]=d[i].grievances[j];\r\n               a++;\r\n               }\r\n           } \r\n       }\r\n       return Gdata;\r\n    }\r\n    \r\n        return(\r\n            <>\r\n            <table className=\"Gtable table-dark\">\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>Names</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Department</th>\r\n                <th>Grievance</th>\r\n                <th>Status</th>\r\n                <th>Feedback</th>\r\n                <th>Date</th>\r\n            </tr>\r\n            {\r\n              Array.map((cval)=>{\r\n                  return <tr>\r\n                  <td>{cval._id}</td>\r\n                  <td>{cval.name}</td>\r\n                  <td>{cval.email}</td>\r\n                  <td>{cval.phone}</td>\r\n                  <td>{cval.dept}</td>\r\n                  <td>{cval.grievance}</td>\r\n                  <td>{cval.status}</td>\r\n                  <td>{cval.feedback}</td>\r\n                  <td>{cval.date}</td>\r\n                  </tr>\r\n              })\r\n            } \r\n            </table>\r\n            <Link to=\"/aAbBcC/updatedocs\" className=\"btn btn-outline-primary mx-4 mb-1 update\">Update Documents</Link>\r\n            <Link to=\"/login\" className=\"btn btn-outline-warning mx-4 mb-1 update\">Logout as Admin</Link>\r\n            <br />\r\n            <br />\r\n            <p className='small mx-4' style={{\"font-style\":\"italic\"}}>Note: Copy the grievance ID to update.</p>\r\n            </>\r\n        );\r\n    }\r\n\r\nexport default GrievanceStatus;","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Error.jsx",[],"C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\components\\Service.jsx",["98","99"],"import React,{useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst GrievanceStatus=()=>{\r\n    var arr=[{date:\"\",dept:\"\",email:\"\",feedback:\"\",grievance:\"\",name:\"\",phone:\"\",status:\"\",_id:\"\"}];\r\n    const [Array,setArray] =useState([{date:\"\",dept:\"\",email:\"\",feedback:\"\",grievance:\"\",name:\"\",phone:\"\",status:\"\",_id:\"\"}]);\r\n\r\n    /*const handleInputs=(event)=>{\r\n      setCat(event.target.value);\r\n    }*/\r\n\r\n    const getData=async()=>{\r\n        try{\r\n         const res=await fetch(\"/grievancelist\",{\r\n            method: \"GET\",\r\n            headers:{\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            credentials:\"include\"\r\n         });\r\n         const data=await res.json();\r\n         console.log(data);\r\n         arr=getlist(data);\r\n        \r\n         setArray(arr);\r\n         \r\n         if(!res.status===200){\r\n            const error=new Error(res.err);\r\n            throw error;\r\n        }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getData();\r\n     },[])\r\n\r\n     const getlist=(d)=>{\r\n         let a=0;\r\n         //console.log(d);\r\n         let Gdata=[{date:\"\",dept:\"\",email:\"\",feedback:\"\",grievance:\"\",name:\"\",phone:\"\",status:\"\",_id:\"\"}];\r\n       for(let i=0;i<d.length;i++){\r\n           for(let j=0;j<d[i].grievances.length;j++){\r\n               //console.log(\"Inside Loop: \"+d[i].grievances[j].name + \" \"+ d[i].grievances[j].dept\r\n               //+ \" \" + d[i].grievances[j].grievance);\r\n               if(d[i].grievances[j].dept==\"Service Provider\"){\r\n               Gdata[a]=d[i].grievances[j];\r\n               a++;\r\n               }\r\n           } \r\n       }\r\n       return Gdata;\r\n    }\r\n    \r\n        return(\r\n            <>\r\n            <table className=\"Gtable table-dark\">\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>Names</th>\r\n                <th>Email</th>\r\n                <th>Phone</th>\r\n                <th>Department</th>\r\n                <th>Grievance</th>\r\n                <th>Status</th>\r\n                <th>Feedback</th>\r\n                <th>Date</th>\r\n            </tr>\r\n            {\r\n              Array.map((cval)=>{\r\n                  return <tr>\r\n                  <td>{cval._id}</td>\r\n                  <td>{cval.name}</td>\r\n                  <td>{cval.email}</td>\r\n                  <td>{cval.phone}</td>\r\n                  <td>{cval.dept}</td>\r\n                  <td>{cval.grievance}</td>\r\n                  <td>{cval.status}</td>\r\n                  <td>{cval.feedback}</td>\r\n                  <td>{cval.date}</td>\r\n                  </tr>\r\n              })\r\n            } \r\n            </table>\r\n            <Link to=\"/aAbBcC/updatedocs\" className=\"btn btn-outline-primary mx-4 mb-1 update\">Update Documents</Link>\r\n            <Link to=\"/login\" className=\"btn btn-outline-warning mx-4 mb-1 update\">Logout as Admin</Link>\r\n            <br />\r\n            <br />\r\n            <p className='small mx-4' style={{\"font-style\":\"italic\"}}>Note: Copy the grievance ID to update.</p>\r\n            </>\r\n        );\r\n    }\r\n\r\nexport default GrievanceStatus;","C:\\Grievance-Portal-main\\Grievance-Portal-main\\client\\src\\config.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":36,"column":7,"nodeType":"106","endLine":36,"endColumn":9,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":10,"column":9,"nodeType":"110","messageId":"111","endLine":10,"endColumn":12},{"ruleId":"104","severity":1,"message":"112","line":42,"column":8,"nodeType":"106","endLine":42,"endColumn":10,"suggestions":"113"},{"ruleId":"104","severity":1,"message":"112","line":39,"column":8,"nodeType":"106","endLine":39,"endColumn":10,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":49,"column":42,"nodeType":"117","messageId":"118","endLine":49,"endColumn":44},{"ruleId":"108","severity":1,"message":"119","line":11,"column":10,"nodeType":"110","messageId":"111","endLine":11,"endColumn":15},{"ruleId":"108","severity":1,"message":"120","line":8,"column":12,"nodeType":"110","messageId":"111","endLine":8,"endColumn":16},{"ruleId":"108","severity":1,"message":"121","line":3,"column":8,"nodeType":"110","messageId":"111","endLine":3,"endColumn":14},{"ruleId":"108","severity":1,"message":"122","line":70,"column":13,"nodeType":"110","messageId":"111","endLine":70,"endColumn":14},{"ruleId":"115","severity":1,"message":"116","line":75,"column":40,"nodeType":"117","messageId":"118","endLine":75,"endColumn":42},{"ruleId":"108","severity":1,"message":"119","line":6,"column":12,"nodeType":"110","messageId":"111","endLine":6,"endColumn":17},{"ruleId":"104","severity":1,"message":"112","line":39,"column":8,"nodeType":"106","endLine":39,"endColumn":10,"suggestions":"123"},{"ruleId":"115","severity":1,"message":"116","line":49,"column":42,"nodeType":"117","messageId":"118","endLine":49,"endColumn":44},{"ruleId":"104","severity":1,"message":"112","line":39,"column":8,"nodeType":"106","endLine":39,"endColumn":10,"suggestions":"124"},{"ruleId":"115","severity":1,"message":"116","line":49,"column":42,"nodeType":"117","messageId":"118","endLine":49,"endColumn":44},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userContact'. Either include it or remove the dependency array.","ArrayExpression",["127"],"no-unused-vars","'Cat' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["128"],["129"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'state' is assigned a value but never used.","'show' is assigned a value but never used.","'config' is defined but never used.","'a' is assigned a value but never used.",["130"],["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"134","fix":"136"},{"desc":"134","fix":"137"},{"desc":"134","fix":"138"},"Update the dependencies array to be: [userContact]",{"range":"139","text":"140"},"Update the dependencies array to be: [getData]",{"range":"141","text":"142"},{"range":"143","text":"142"},{"range":"144","text":"142"},{"range":"145","text":"142"},[1074,1076],"[userContact]",[1231,1233],"[getData]",[1123,1125],[1123,1125],[1123,1125]]